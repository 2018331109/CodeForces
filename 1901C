C. Add, Divide and Floor

STATEMENT
You are given an integer array a1,a2,…,an (0≤ai≤109). In one operation, you can choose an integer x (0≤x≤1018) and 
replace ai with ⌊ai+x2⌋ (⌊y⌋ denotes rounding y down to the nearest integer) for all i from 1 to n. 
Pay attention to the fact that all elements of the array are affected on each operation.
Print the smallest number of operations required to make all elements of the array equal.
If the number of operations is less than or equal to n, then print the chosen x for each operation. 
If there are multiple answers, print any of them.

SOLUTION
C++
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define yes cout << "Yes" << endl;
#define no cout << "No" << endl;
#define neg cout << -1 << endl;
#define pb push_back
int mod = 1e9 + 7;
int md = 998244353;

const int INF = 1e18;

void solve()
{
    int n;
    cin>>n;
    int a[n];
    int mn=INT_MAX;
    int mx=INT_MIN;
    vector<int>ans;

    for(int i=0; i<n; i++)
    {
        cin>>a[i];
        mx=max(mx, a[i]);
        mn=min(a[i], mn);
    }

    while(mx!=mn)
    {
        if(mx%2 == mn%2)
        {
            ans.pb(0);
        }
        else if(mx%2 == 0)
        {
            ans.pb(1);
            mx+=1;
            mn+=1;
        }
        else
        {
            ans.pb(0);
        }
        mn/=2;
        mx/=2;
    }
    int k=ans.size();
    cout<<k<<endl;
    if(k>n)
    {
        return;
    }

    for(auto it:ans)
    {
        cout<<it<<" ";
    }

    cout<<endl;
}

signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int test = 1;
    cin >> test;

    for (int tc = 1; tc <= test; tc++)
    {
        solve();
    }

    return 0;
}

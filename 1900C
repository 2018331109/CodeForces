C. Anji's Binary Tree

SOLUTION

C++
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define yes cout << "Yes" << endl;
#define no cout << "No" << endl;
#define neg cout << -1 << endl;
#define pb push_back
int mod = 1e9 + 7;
int md = 998244353;

const int INF = 1e18;

void solve()
{
    int n;
    cin >> n;
    string s;
    cin >> s;
    s='*'+s;
    int ans = INF;  // Fixed: Initialized ans to INF

    vector<pair<int, pair<int, int>>> v(n+1);
    for (int i = 1; i <= n; i++)
    {
        int l, r;
        cin >> l >> r;
        v[i] = {i, {l, r}};
    }

    queue<pair<int, pair<int, int>>> q;
    q.push(v[1]);
    pair<int, pair<int, int>> p;
    vector<int> mx(n+1, 0);   

    while (!q.empty())
    {
        int sz = q.size();
        while (sz--)
        {
            p = q.front();
            q.pop();
            int i = p.first;
            auto [a, b] = p.second;
 

            if (a == 0 and b == 0)
            {
                ans = min(ans, mx[i]);
                //cout<<i<<" "<<ans<<endl;
            }
            if (a != 0)
            {
                mx[a] = mx[i] + (s[i] != 'L');
                q.push(v[a]);
            }
            if(b != 0)
            {
                mx[b] = mx[i] + (s[i] != 'R');
                q.push(v[b]);
            }
 
        }
    }

 

    cout << ans << endl;
}

signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int test = 1;
    cin >> test;

    for (int tc = 1; tc <= test; tc++)
    {
        solve();
    }

    return 0;
}

C. Queries for the Array

STATEMENT
Monocarp had an array a

consisting of integers. Initially, this array was empty.

Monocarp performed three types of queries to this array:

    - choose an integer and append it to the end of the array. Each time Monocarp performed a query of this type, 
    he wrote out a character +;
    - remove the last element from the array. Each time Monocarp performed a query of this type, 
    he wrote out a character -. Monocarp never performed this query on an empty array;
    - check if the array is sorted in non-descending order, i.,e. a1≤a2≤⋯≤ak,
    where k is the number of elements in the array currently. 
    Every array with less than 2 elements is considered sorted. If the array was sorted by the time Monocarp was performing that query, he wrote out a character 1. Otherwise, he wrote out a character 0. 

You are given a sequence s of q characters 0, 1, + and/or -. 
These are the characters that were written out by Monocarp, given in the exact order he wrote them out.

You have to check if this sequence is consistent, i. e. 
it was possible for Monocarp to perform the queries so that the sequence of characters he wrote out is exactly s.

SOLUTION
void solve()
{
    string s;
    cin>>s;
    int inf=1000000009;
    int sorted=0, unsorted=inf;
    int l=0;
    int cnt=0;
    for(auto it:s)
    {
        if(it=='+')
        {
            cnt++;
        }
        else if(it=='-')
        {
            cnt--;
            if(cnt<unsorted)
            {
                unsorted=inf;
            }

            sorted=min(sorted, cnt);
        }
        else if(it=='1')
        {
            if(unsorted<=cnt)
            {
                no;
                return;
            }

            sorted=max(sorted, cnt);
        }
        else
        {
            if(sorted>=cnt || cnt<2)
            {
                cout<<"NO"<<endl;
                return;
            }

            unsorted=min(unsorted, cnt);
        }
    }
    cout<<"YES"<<endl;
}
